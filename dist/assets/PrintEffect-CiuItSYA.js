import{_ as p,r as u,o as m,J as v,a as g,b as _}from"./index-BSfxMGEu.js";function h(o,a,e,n){const t=document.createElement("span");t.className="span",t.textContent=a,t.style.fontSize=e,t.style.backgroundImage=n,t.style.backgroundClip="text",t.style.color="transparent",t.style.fontWeight="bold",o.appendChild(t)}const x=["data-text"],y={__name:"PrintEffect",props:{size:{type:String,default:""},gradient:{type:String,default:"linear-gradient(to right, red, yellow, green)"},text:{type:String,default:""}},setup(o){const a=o,e=u(null),n=u(!1);let t,s=[];return m(()=>{t=new IntersectionObserver(r=>{const i=r[0];if(i.isIntersecting&&!n.value){n.value=!0;const l=e.value.dataset.text.trim().split("");e.value.innerHTML="",l.forEach((f,c)=>{const d=setTimeout(()=>{h(e.value,f,a.size,a.gradient),c===l.length-1&&(n.value=!1)},c*100);s.push(d)})}else i.isIntersecting||(s.forEach(l=>clearTimeout(l)),s=[],n.value=!1,e.value&&(e.value.innerHTML=""))},{threshold:.1}),e.value&&t.observe(e.value)}),v(()=>{e.value&&t.unobserve(e.value),s.forEach(r=>clearTimeout(r))}),(r,i)=>(_(),g("div",{class:"element",ref_key:"elementRef",ref:e,"data-text":a.text},null,8,x))}},E=p(y,[["__scopeId","data-v-c5f0dde8"]]);export{E as P};
